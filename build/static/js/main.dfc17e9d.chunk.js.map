{"version":3,"sources":["images/default.jpg","redux/actions/votes.js","components/blogs/home.js","redux/actions/blogs.js","components/register/register.js","components/register/post_register.js","components/login/login.js","redux/actions/login.js","components/login/logout.js","redux/actions/user.js","components/profile/profile.js","components/profile/Updateprofile.js","redux/actions/profile.js","components/navbar.js","components/blogs/new_blog.js","components/blogs/comments.js","redux/actions/comments.js","components/blogs/blog_detail.js","App.js","serviceWorker.js","redux/reducers/userReducer.js","redux/reducers/blogsReducer.js","redux/reducers/UserProfile.js","redux/reducers/votesReducer.js","redux/reducers/commentReducer.js","redux/reducers/index.js","redux/store/index.js","index.js","shared/authorization-token.js"],"names":["module","exports","GotVotes","data","type","payload","addVote","user_id","blog_id","dispatch","axios","post","then","VoteAdded","removeVote","get","getAllVotes","gotAllVotes","Home","jwt","decode","localStorage","jwtToken","blogs","useSelector","state","blogReducer","votes","votesReducer","allvotes","useState","blogNav","setBlogNav","profileNav","setProfileNav","author","setAuthor","blogid","setBlogId","domupdate","setDomupdate","useDispatch","useEffect","to","pathname","blogList","map","details","vote","filter","_id","isliked","some","id","key","Card","className","bg","Header","onClick","e","Body","Title","title","Text","content","Footer","handleUnvote","handleVote","length","Register","username","setUsername","email","setEmail","pass1","setPass1","pass2","setPass2","Form","onSubmit","preventDefault","alert","response","console","log","status","window","location","href","catch","error","Group","controlId","Label","Control","value","placeholder","onChange","target","required","muted","Check","label","feedback","Button","variant","Postregister","Login","identifier","setIdentifier","pass","setPass","setItem","token","userLogin","Logout","size","clear","GettingUser","GetUserProfile","res","Profile","props","userid","navigate","setNavigate","blognavigate","setBlogNavigate","user_data","UserProfile","curr_user_data","user_blogs","undefined","push","vt","Image","src","defimg","roundedCircle","fullname","phone","bio","setFullname","setBio","gender","setGender","setPhone","website","setWebsite","event","updated_data","put","Updated","UpdateProfile","Row","as","Col","md","InputGroup","Prepend","aria-describedby","aria-label","Menu","isLoggedIn","userReducer","Navbar","sticky","Brand","Nav","Link","NavDropdown","Item","Divider","inline","Blog","setTitle","setContent","FormControl","getItem","headers","newBlog","createBlog","Comments","commentList","comment","setComment","comments","commentReducer","handleDelete","comment_id","confirm","delete","deleteComment","style","textAlign","newComment","createComment","Detail","blog","blogDetail","setVotes","propsData","GetVotes","App","exact","path","component","render","Updateprofile","React","Component","Boolean","hostname","match","myState","current_user","commentState","rootReducer","combineReducers","action","Object","assign","user_vote","store","createStore","applyMiddleware","thunk","verify","err","authData","defaults","common","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.dfc17e9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.3c69b274.jpg\";","import axios from 'axios';\n\n// getting votes\nexport function GettingVotes(){\n    return {\n        type: 'GETTINGVOTES'\n    };\n}\n\nexport function GotVotes(data){\n    return {\n        type: 'GOTVOTES',\n        payload: data\n    };\n}\n\nexport function GetVotes(blog_id,user_id){\n    return dispatch => {\n        dispatch(GettingVotes());\n        axios.get(`/comments/${blog_id}/get-votes/${user_id}`)\n        .then ( data => {\n            console.log(\"Action:- \" + data);\n            dispatch(GotVotes(data));\n        });\n    };\n}\n\n//adding votes\nexport function VoteAdded (data) {\n    return {\n        type: 'VOTEADDED',\n        payload: data\n    };\n}\n\nexport function addVote(user_id,blog_id){\n    return dispatch => {\n        axios.post(`/comments/${user_id}/vote/${blog_id}`)\n        .then ( data => {\n            dispatch(VoteAdded(data));\n        } );\n    };\n}\n\n\nexport function removeVote(user_id,blog_id){\n    return dispatch => {\n        axios.get(`/comments/${blog_id}/remove-vote/${user_id}`)\n        .then ( data => {\n            dispatch(GotVotes(data));\n        });\n    };\n}\n\nexport function getAllVotes(){\n    return dispatch => {\n        axios.get('/comments/votes')\n        .then( data => {\n            dispatch(gotAllVotes(data));\n        });\n    };\n}\n\nexport function gotAllVotes(data){\n    return{\n        type: 'GOTALLVOTES',\n        payload: data\n    };\n}","import React, {useEffect,useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Card} from 'react-bootstrap';\nimport {Redirect} from 'react-router-dom';\nimport {getBlogs} from '../../redux/actions/blogs';\nimport {getAllVotes, addVote,removeVote} from '../../redux/actions/votes';\n\nimport { FaHeart } from \"react-icons/fa\";\nimport { FaRegHeart } from \"react-icons/fa\";\nimport jwt from 'jsonwebtoken';\n\nimport '../../css/home.css';\n\n\nconst Home = () => {\n    // decoding the token to get logged in user data\n    const data = jwt.decode(localStorage.jwtToken);\n    //getting all blogs\n    const blogs = useSelector(state => state.blogReducer.blogs);\n    // getting all votes\n    const votes = useSelector( state => state.votesReducer.allvotes);\n    // storing boolean value on the bassis on clicks\n    const [blogNav,setBlogNav] = useState(false);\n    const [profileNav, setProfileNav] = useState(false);\n    // storing blog and author id to pass as props in Redirect component\n    const [author,setAuthor] = useState();\n    const [blogid, setBlogId] = useState();\n    const [domupdate, setDomupdate] = useState(false);\n    \n    const dispatch = useDispatch();\n\n    // adding the like to the backend\n    const handleVote = (blogid,e) => {\n        setDomupdate(true);\n        dispatch(addVote(data.id,blogid));\n    };\n\n    // unvoting the blog \n    const handleUnvote = (blogid,e) => {\n        setDomupdate(false);\n        dispatch(removeVote(data.id,blogid));\n    };\n\n    useEffect (() => {\n        dispatch(getBlogs());      \n        dispatch(getAllVotes());  \n    }, [domupdate]);\n\n    const handleBlogClick = (id,e) => {\n        setBlogId(id);\n        //localStorage.setItem('blogid', id);\n        setBlogNav(true);\n    };\n\n    const handleProfileClick = (id,e) => {\n        setAuthor(id)\n        //localStorage.setItem('userid', id);\n        setProfileNav(true);\n    };\n\n    // If user clicked on Blogs then redirecting to blogs-detail\n    if(blogNav){\n        return < Redirect to ={ {\n            pathname: '/blog-detail',\n            state: { blog_id: blogid }\n          }} \n          />;\n    }\n\n    // if user clicked on username then redirecting to user-profile\n    if(profileNav){\n        return < Redirect to ={ {\n            pathname: '/profile',\n            state: { user_id: author }\n          }} \n          />;\n    }\n\n    var blogList = blogs.map( (details) => {\n        var vote = votes.filter( vote => vote.blog_id === details._id);\n        var isliked = votes.some( vote => (vote.blog_id === details._id && vote.user_id === data.id));\n        return(\n            <div key={details._id}>\n            <Card className=\"text-center blog-card\" bg='info'>\n                <Card.Header className='card-title-home' onClick={(e) => handleProfileClick(details.user_id,e)}>\n                    @{details.author}\n                </Card.Header>\n                <Card.Body>\n                <Card.Title className='card-title-home' onClick={(e) => handleBlogClick(details._id,e)}>{details.title}</Card.Title>\n                <Card.Text className='card-text'>\n                {details.content}\n                </Card.Text>\n                </Card.Body>\n                <Card.Footer >\n                    { isliked && <FaHeart className='blog-detail-icon' onClick={ (e) => handleUnvote(details._id,e)}/>}&nbsp;\n                    {!isliked && <FaRegHeart className='blog-detail-icon' onClick={ (e) => handleVote(details._id,e)}/>}&nbsp;\n                    <span>{vote.length}</span>\n                </Card.Footer>\n            </Card><br />\n            </div>\n        )\n    });\n\n\n    return(\n        <div>\n            <h3>Welcome To Blogs</h3>\n            <div className='blogs-list'>\n                {blogList}\n            </div>\n        </div>\n    );\n}\n\n\nexport default (Home);\n","import axios from 'axios';\n\n// connecting to redux after creating a new blog\nexport function newBlog (data) {\n    return {\n        type: 'NEW_BLOG',\n        data\n    };\n}\n\n// connecting to redux after getting all the blogs\nexport function postGetBlogs () {\n    return {\n        type: 'GOTBLOGS'\n    };\n}\n\n// setting the id of the blog for its detail\nexport function setBlogID (id) {\n    return {\n        type: 'SETBLOGID',\n        payload: id\n    };\n}\n\n// creating a new blog here\nexport function createBlog (data,token) {\n    return function (dispatch) {\n        axios.post('/blogs/newblog', data, { headers: { 'authorization': `Bearer ${token}` }})\n        .then( (res) => {\n            dispatch(newBlog(res.data));\n            window.location.href = '/home';\n        })\n        .catch(function (error) {\n            console.log(error);\n          });\n    };\n}\n\n// getting all the blogs here\nexport function getBlogs() {\n    return dispatch =>{\n        axios.get('/blogs/getBlogs')\n        .then( (data) => {\n            dispatch( {type: 'BLOGS', payload: data.data} );\n        });\n    };\n}\n\n// getting a single blog detail here\nexport function getBlog(id){\n    return dispatch => {\n        axios.get(`/blogs/getBlog/${id}`)\n        .then( (res) => {\n            dispatch({type: 'BLOGDETAIL', payload: res});\n        });\n    };\n}\n\nexport function GetUserBlogs(id){\n    return dispatch => {\n        axios.get(`/profile/getblogs/${id}`)\n        .then( data => {\n            dispatch({type: 'BLOGS', payload: data.data});\n        });\n    }\n}\n\nexport function DeleteBlog(id){\n    return dispatch => {\n        axios.delete(`/blogs/deleteBlogs/${id}`)\n        .then ( data => {\n            dispatch({type: 'BLOGDELETED', payload: data});\n        });\n    }\n}","import React, {useState} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport axios from 'axios';\nimport {useDispatch} from 'react-redux';\n\nimport '../../css/userAuth/register.css';\n\nconst Register = () => {\n    const[username, setUsername] = useState(\"\");\n    const[email, setEmail] = useState(\"\");\n    const[pass1, setPass1] = useState(\"\");\n    const[pass2, setPass2] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if ( pass1 !== pass2 ){\n            alert(\"Passwords don't match. Try Again\")\n        }\n        else{\n            const data = {\n                \"username\": username,\n                \"email\": email,\n                \"password\": pass1\n            }\n\n            axios.post('/user/createUser', data)\n              .then(function (response) {\n                console.log(\"Status:- \" + response.status);\n                dispatch({type: 'REGISTERED_USER', payload: response});\n                window.location.href = '/success-register';\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n    }\n}\n\n    return(\n        <div className='register-div-style'>\n            <h3 className='register-head'>Register Today To Start Your Journey</h3>\n            <div className='register-box'>\n            <div className='register-container'>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"formBasicUsername\">\n                        <Form.Label className='register-form-text'>Username</Form.Label>\n                        <Form.Control type=\"text\" value={username} placeholder=\"Enter Username\" onChange = { (e) => setUsername(e.target.value)} required={true}/>\n                    </Form.Group>\n                    {/* Email Goes Here */}\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label className='register-form-text'>Email address</Form.Label>\n                        <Form.Control type=\"email\" value={email} placeholder=\"Enter email\" onChange = { (e) => setEmail(e.target.value)} required={true}/>\n                        <Form.Text className=\" register-form-text\" >\n                        We'll never share your email with anyone else.\n                        </Form.Text>\n                    </Form.Group>\n\n                    {/* Password Fields */}\n                    <Form.Group controlId=\"formBasicPassword1\">\n                        <Form.Label className='register-form-text'>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange = { (e) => setPass1(e.target.value)} required={true}/>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword2\">\n                        <Form.Label className='register-form-text'>Confirm Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange = { (e) => setPass2(e.target.value)} required={true}/>\n                        <Form.Text id=\"passwordHelpBlock\" className='register-form-text'>\n                            Your password must be 8-20 characters long.\n                        </Form.Text>\n                        <Form.Text id=\"passwordHelpBlock\" muted className='register-form-text'>\n                            Must contain letters, numbers and special characters only.\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Check\n                        className='register-form-text'\n                        required = {true}\n                        label=\"Agree to terms and conditions\"\n                        feedback=\"You must agree before submitting.\"\n                        />\n                    </Form.Group>\n                    \n                    <Button variant=\"primary\" type=\"submit\" className='register-form-text'>\n                        Register\n                    </Button><br /><br />\n\n                    <Form.Group>\n                        <Form.Text className='register-form-text'>\n                            If already a user then click below to sign in\n                        </Form.Text>\n                        <a href='/login'>SignIn</a>\n                    </Form.Group>\n                </Form>\n            </div>\n            </div>\n        </div>\n    );\n\n}\n\n\n\nexport default (Register);","import React from 'react';\n\nimport '../../css/userAuth/register.css';\n\nconst Postregister = () => {\n    return(\n        <div className='post_register-container' > \n            <p className='post_register-text'> Please login with your credentials to start your journey.</p>\n        </div>\n    );\n}\n\nexport default (Postregister);","import React, {useState} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport {useDispatch} from 'react-redux';\n\nimport '../../css/userAuth/login.css';\nimport {userLogin} from '../../redux/actions/login';\n\nconst Login = () => {\n    const[identifier, setIdentifier] = useState();\n    const[pass, setPass] = useState();\n\n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const data = {\n            \"identifier\": identifier,\n            \"password\": pass\n        };\n        dispatch(userLogin(data));\n    };\n\n    return(\n        <div className='login-div-style'>\n            <h3 className='login-head'>Login Here</h3>\n            <div className='login-box'>\n            <div className='login-container'>\n                <Form onSubmit={handleSubmit}>\n                    {/* Email Goes Here */}\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label className='login-form-text'>Enter Username or Email</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter email\" onChange = { (e) => setIdentifier(e.target.value)} required=\"true\" />\n                    </Form.Group>\n\n                    {/* Password Fields */}\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label className='login-form-text'>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange = { (e) => setPass(e.target.value)} required=\"true\"/>\n                    </Form.Group>\n                    \n                    <Button variant=\"primary\" type=\"submit\">\n                        Log In\n                    </Button><br/><br/>\n\n                    <Form.Group>\n                        <Form.Text className='login-form-text'>\n                            If not registered then click below to register\n                        </Form.Text>\n                        <a href='/register'>Register here</a>\n                    </Form.Group>\n                </Form>\n            </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default (Login);","import axios from 'axios';\n\nexport function setCurrentUser (data) {\n    return {\n        type: 'USER_LOGIN', \n        payload: data\n    }\n}\n\nexport function loggedIn () {\n    return {\n        type: 'LOGGEDIN'\n    }\n}\n\nexport function userLogin(data){\n    return dispatch => {\n        axios.post('user/loginUser', data)\n        .then(function (response) {\n            localStorage.setItem('jwtToken', response.data.token);\n            dispatch(loggedIn());\n            window.location.href = '/home'; \n          })        \n        .catch(function (error) {\n            alert('Sorry, your username or password was incorrect.');\n          });\n    };\n}","import React from 'react';\nimport {Button} from 'react-bootstrap';\n\nimport '../../css/userAuth/logout.css';\n\nconst Logout = () => {\n\n    const handleLogout = () =>{\n        localStorage.clear('jwtToken');\n        window.location.href = '/login';\n    }\n\n    return (\n        <div>\n            <h6 className=\"logout-head\">Are you sure you want to LogOut? </h6><br />\n            <Button variant=\"danger\" size=\"sm\" onClick={handleLogout}>Log Out</Button>\n        </div>\n    );\n}\n\n\nexport default Logout;","import axios from \"axios\";\n\nexport function GettingUser() {\n    return {\n        type: 'FETCHING_USER'\n    }\n}\n\nexport function GotUser(data){\n    return {\n        type: 'GOT_USER',\n        payload: data\n    }\n}\n\nexport function GetUserProfile (id) {\n    return dispatch => {\n        dispatch(GettingUser);\n        return axios.get(`/user/getUser/${id}`)\n        .then( (res) => {\n            dispatch(GotUser(res));\n        });\n    }\n}","import React, {useEffect, useState} from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport jwt from 'jsonwebtoken';\r\n\r\nimport { Button, Image, Card } from 'react-bootstrap';\r\nimport '../../css/profile/profile.css';\r\nimport defimg from '../../images/default.jpg';\r\n\r\nimport {GetUserProfile} from '../../redux/actions/user';\r\nimport {GetUserBlogs} from '../../redux/actions/blogs';\r\nimport {getAllVotes} from '../../redux/actions/votes';\r\n\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { FaRegHeart } from \"react-icons/fa\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    // declaring the userid\r\n    var userid;\r\n    // getting userdata from token\r\n    const data = jwt.decode(localStorage.jwtToken);\r\n    // for update-profile\r\n    const [navigate,setNavigate] = useState(false);\r\n    const [blognavigate, setBlogNavigate] = useState(false);\r\n    const [blogid, setBlogId] = useState();\r\n    // getting the full user profile for the selected user\r\n    const user_data = useSelector( state => state.UserProfile.curr_user_data);\r\n    // getting all the blogs for the selected user\r\n    const user_blogs = useSelector( state => state.blogReducer.blogs);\r\n    const votes = useSelector( state => state.votesReducer.allvotes);\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect( () => {\r\n        // checking if user_id is passed as props or not ( when we clicked on username on blogs )\r\n        if(props.location.state === undefined){\r\n            userid = data.id;\r\n        }\r\n        else{\r\n            userid = props.location.state.user_id;\r\n        }  \r\n        dispatch(GetUserProfile(userid));\r\n        dispatch(GetUserBlogs(userid));\r\n        dispatch(getAllVotes());\r\n    },[]);\r\n\r\n    const handleClick = (id,e) => {\r\n        setBlogId(id)\r\n        setBlogNavigate(true);\r\n        // dispatch(setBlogID(id));\r\n        // localStorage.setItem('blogid',id);\r\n        // window.location.href = '/blog-detail';\r\n    };\r\n\r\n    const handleUpdate = () => {\r\n        dispatch(GetUserProfile(userid));\r\n        setNavigate(true);\r\n    }\r\n\r\n    if(blognavigate){\r\n        return < Redirect to ={ {\r\n            pathname: '/blog-detail',\r\n            state: { blog_id: blogid }\r\n          }} \r\n          />;\r\n    }\r\n\r\n    if(navigate){\r\n        return <Redirect to='/update-profile' push={true} />\r\n    }\r\n \r\n\r\n    var blogList = user_blogs.map( (details) => {\r\n        var vote = votes.filter( vote => vote.blog_id === details._id);\r\n        var isliked = vote.some( vt => (vt.user_id === userid));\r\n        return(\r\n            <div key={details._id}>\r\n            <Card className=\"text-center blog-card\" bg='info'>\r\n                <Card.Header>@{details.author}</Card.Header>\r\n                <Card.Body>\r\n                <Card.Title className='card-title-home' onClick={(e) => handleClick(details._id,e)}>{details.title}</Card.Title>\r\n                <Card.Text className='card-text'>\r\n                {details.content}\r\n                </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer >\r\n                    {isliked && <FaHeart className='blog-detail-icon' />}&nbsp;\r\n                    {!isliked && <FaRegHeart className='blog-detail-icon' />}&nbsp;\r\n                    <span>{vote.length}</span>\r\n                </Card.Footer>\r\n            </Card><br />\r\n            </div>\r\n        )\r\n});\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div className='profile-left-div'>\r\n                <Image className='profile-img' src={defimg} roundedCircle />\r\n                <h6>{user_data.fullname}</h6>\r\n                <p>@{user_data.username}</p>                \r\n                <p>Contact:- {user_data.phone}</p>     \r\n                <p>Email:- {user_data.email}</p><br/>\r\n                <h4>Bio</h4>\r\n                <p>{user_data.bio}</p>\r\n                { (data.id === user_data._id) && <Button variant=\"secondary\" size=\"sm\" onClick={handleUpdate} >Update profile</Button>}\r\n            </div>\r\n\r\n            {/* <div className='profile-right-div' >\r\n               \r\n            </div> */}\r\n\r\n            <div className='profile-center-div'>\r\n                <h4>Blogs</h4>\r\n                <br />{ user_blogs.length === 0 && <p className='no-blogs'>No Blogs yet</p> }\r\n                {blogList}\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Profile;","import React, {useState, useEffect} from 'react';\nimport {Form, Button,Col,InputGroup} from 'react-bootstrap';\nimport '../../css/profile/updateprofile.css';\nimport {useSelector, useDispatch} from 'react-redux';\nimport jwt from 'jsonwebtoken';\nimport {GetUserProfile} from '../../redux/actions/user';\nimport {UpdateProfile} from '../../redux/actions/profile';\n\nconst Profile = () => {\n    const data = jwt.decode(localStorage.jwtToken);\n    const dispatch = useDispatch();\n    const user_data = useSelector( (state) => state.UserProfile.curr_user_data);\n\n    useEffect( () => {\n        dispatch(GetUserProfile(data.id));\n    }, []);\n\n    const[username,setUsername] = useState(user_data.username);\n    const[fullname, setFullname] = useState(user_data.fullname);\n    const[bio, setBio] = useState(user_data.bio);\n    const[gender, setGender] = useState(user_data.gender);\n    const[phone, setPhone] = useState(user_data.phone);\n    const[website, setWebsite] = useState('');\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const updated_data = {\n            \"fullname\": fullname,\n            \"username\": username,\n            \"bio\": bio,\n            \"gender\": gender,\n            \"phone\": phone,\n            \"website\": website\n        };\n        dispatch(UpdateProfile(data.id, updated_data));\n    };\n\n    return(\n        <div className='profile-div'>\n            <h3 className='profile-head'>Welcome To your Profile</h3>\n            <div className='profile-container'>\n                <Form onSubmit={handleSubmit}>\n                <Form.Row>\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\n                        <Form.Label>Full Name</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            value={fullname}\n                            onChange = { (e) => setFullname(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\n                        <Form.Label>Username</Form.Label>\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <Form.Control\n                            type=\"text\"\n                            value={user_data.username}\n                            aria-describedby=\"inputGroupPrepend\"\n                            onChange = { (e) => setUsername(e.target.value)}\n                            required\n                            />\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationWebsite\">\n                    <Form.Label>Website</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        value={user_data.website}\n                        onChange = { (e) => setWebsite(e.target.value)}\n                    />\n                    </Form.Group>\n\n                    \n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\n                        <Form.Label>Phone</Form.Label>\n                        <Form.Control \n                        type=\"number\" \n                        value={user_data.phone} \n                        onChange = { (e) => setPhone(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\n                        <Form.Label>Gender</Form.Label>\n                        <Form.Control \n                        type=\"text\" \n                        value={user_data.gender}\n                        required \n                        onChange = { (e) => setGender(e.target.value)}\n                        />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <InputGroup as={Col}>\n                        <InputGroup.Prepend>\n                        <InputGroup.Text>Bio</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control \n                        as=\"textarea\" \n                        value={user_data.bio}\n                        aria-label=\"With textarea\" \n                        onChange={ (e) => setBio(e.target.value)} />\n                    </InputGroup>\n                </Form.Row><br />\n                    \n                    <Button type=\"submit\">Update Profile</Button>\n                </Form>\n            </div>\n        </div>\n    );\n\n}\n\nexport default (Profile);","import axios from \"axios\";\n\nexport function Updating (){\n    return {\n        type: 'UPDATING'\n    }\n}\n\nexport function Updated(data){\n    return{\n        type: 'UPDATEDPROFILE',\n        payload: data\n    }\n}\n\nexport function UpdateProfile(id, data){\n    return dispatch => {\n        dispatch(Updating());\n        axios.put(`/profile/updateprofile/${id}`, data)\n        .then( res => {\n            dispatch(Updated(res));\n            alert('Profile Updated Successfully');\n            window.location.href = '/profile';\n        });\n    }\n}","import React from 'react';\nimport {Navbar, Nav, Button, Form, FormControl, NavDropdown} from 'react-bootstrap';\nimport {useSelector} from 'react-redux';\nimport jwt from 'jsonwebtoken';\n\nconst Menu = () => {\n    var isLoggedIn = useSelector( state => state.userReducer.isLoggedIn);\n    // decoding the token to get logged in user data\n    const data = jwt.decode(localStorage.jwtToken);\n\n    return(\n        <>\n            <Navbar sticky=\"top\" bg=\"light\" variant=\"light\">\n                {isLoggedIn && <Navbar.Brand href=\"/home\">Blogs</Navbar.Brand> }\n                <Nav className=\"mr-auto\">\n                {isLoggedIn && <Nav.Link href=\"/home\">Home</Nav.Link>} \n                {isLoggedIn && <Nav.Link href=\"/new-blog\">New Blog</Nav.Link>}\n\n                {isLoggedIn && <NavDropdown title=\"Profile\" id=\"collasible-nav-dropdown\">\n                    <NavDropdown.Item href=\"/profile\">Profile</NavDropdown.Item>\n                    {/* <NavDropdown.Item href=\"/settings\">Settings</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#\">Something</NavDropdown.Item> */}\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item href=\"/logout\">LogOut</NavDropdown.Item>\n                </NavDropdown>}\n                </Nav>\n\n                <Nav className=\"mr-auto\">\n                {!isLoggedIn && <Nav.Link href=\"/login\">Login</Nav.Link>}\n                {!isLoggedIn && <Nav.Link href=\"/register\">Register</Nav.Link>}\n                </Nav>\n    \n                {isLoggedIn && <Form inline>\n                {/* <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                <Button variant=\"outline-info\">Search</Button> */}\n                Welcome {data.username}\n                </Form>}\n            </Navbar>\n        </>\n    );\n}\n\nexport default (Menu);","import React, {useState} from 'react';\nimport {InputGroup, FormControl, Button} from 'react-bootstrap';\n\nimport {useDispatch} from 'react-redux';\nimport {createBlog} from '../../redux/actions/blogs';\n\nimport '../../css/blog.css';\n\nconst Blog = () => {\n    const [title, setTitle] = useState();\n    const [content, setContent] = useState();\n\n    const dispatch = useDispatch();\n\n    const handleBlogSubmit = (e) => {\n        e.preventDefault();  \n        const token = localStorage.getItem('jwtToken');\n        const data = {\n            \"title\": title,\n            \"content\": content,\n            \"likes\": 0\n        };\n\n        dispatch(createBlog(data,token));\n};\n\n    return (\n        <div>\n            <h3 className='blog-head'>New Blog</h3>\n            <div className='blog-container'>\n\n                <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend>\n                    <InputGroup.Text id=\"inputGroup-sizing-default\">Title</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                    aria-label=\"Default\"\n                    aria-describedby=\"inputGroup-sizing-default\"\n                    onChange={ (e) => setTitle(e.target.value)}\n                    />\n                </InputGroup>\n                \n                <InputGroup>\n                    <InputGroup.Prepend>\n                    <InputGroup.Text>Blog Content</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl \n                    as=\"textarea\" \n                    aria-label=\"With textarea\" \n                    onChange={ (e) => setContent(e.target.value)} />\n                </InputGroup><br />\n\n                <Button variant=\"primary\" type=\"submit\" onClick={handleBlogSubmit}>\n                        Post Blog\n                    </Button>\n            </div>\n        </div>\n    );\n}\n\nexport default (Blog);","import React, {useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {InputGroup,FormControl,Button,Card} from 'react-bootstrap';\r\nimport {createComment,deleteComment} from '../../redux/actions/comments';\r\n\r\n// import { FaHeart } from \"react-icons/fa\";\r\n// import { FaRegHeart } from \"react-icons/fa\";\r\nimport { MdDelete } from \"react-icons/md\";\r\n\r\nconst Comments = (props) => {\r\n    var commentList;\r\n    const dispatch = useDispatch();\r\n    const blog_id = props.data.blog_id;\r\n    const user_id = props.data.user_id;\r\n    const [comment,setComment] = useState('');\r\n    // getting comments from the redux state\r\n    const comments = useSelector( state => state.commentReducer.comments);\r\n\r\n    // function for deleting the comment\r\n    const handleDelete = (comment_id,e) => {\r\n        console.log('Checning comment id:- ' + comment_id);\r\n        if(window.confirm('Are you sure you want to delete this comment?')){\r\n            dispatch(deleteComment(user_id,comment_id));\r\n        }\r\n    };\r\n\r\n    // function for posting new comment\r\n    const postNewComment = () =>{\r\n        const data = {\r\n            comment: comment\r\n        };\r\n        dispatch(createComment(data,blog_id,user_id));\r\n\r\n    };\r\n\r\n\r\n    // making the comments list as card.\r\n    commentList = comments.map( (comment) => {\r\n        return(\r\n            <Card className=\"text-left\" bg='light'  key={comment._id}>\r\n                <Card.Header >\r\n                    @{comment.user_id.username}\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <blockquote className=\"blockquote mb-0\">\r\n                    <p>\r\n                        {comment.comment}\r\n                    </p>\r\n                    </blockquote>\r\n                </Card.Body>\r\n                <Card.Footer style={{ textAlign: 'left' }}>\r\n                    {/* { !isliked && <FaRegHeart className='blog-detail-icon'  onClick={handleVote} />}&nbsp;\r\n                    { isliked && <FaHeart className='blog-detail-icon' onClick={handleUnvote} />}&nbsp;\r\n                    <span>{vote}</span> */}\r\n                    { (user_id === comment.user_id._id) && <MdDelete className='blog-detail-icon delete' onClick={ (e) => handleDelete(comment._id,e)}/>}\r\n                </Card.Footer>\r\n            </Card>\r\n        );\r\n    });\r\n   \r\n\r\n    return(\r\n        <div>\r\n            <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                    <InputGroup.Text>New Comment</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl \r\n                    as=\"textarea\" \r\n                    aria-label=\"With textarea\" \r\n                    onChange={ (e) => setComment(e.target.value)} />\r\n                    <Button onClick={postNewComment}>Post</Button>\r\n            </InputGroup><br />    \r\n\r\n            {commentList}    \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comments;","import axios from 'axios';\r\n\r\n// connecting to redux after posting new comment\r\nexport function newComment(data){\r\n    return {\r\n        type: 'NEWCOMMENT',\r\n        payload: data\r\n    };\r\n}\r\n\r\nexport function createComment(data,blog_id,user_id){\r\n    return function (dispatch){\r\n        axios.post(`/comments/${blog_id}/add-comment/${user_id}`, data)\r\n        .then( (res) => {\r\n            dispatch(newComment(res.data));\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    };\r\n}\r\n\r\n// Getting comments for a particular blog\r\nexport function gotComments(data){\r\n    return {\r\n        type: 'GOTCOMMENTS',\r\n        payload: data\r\n    };\r\n}\r\n\r\nexport function getComments(blog_id){\r\n    return function(dispatch) {\r\n        axios.get(`/comments/${blog_id}/get-comment`)\r\n        .then( (res) => {\r\n            dispatch(gotComments(res.data));\r\n        })\r\n        .catch(function(error){\r\n            console.log(error);\r\n        });\r\n    };\r\n}\r\n\r\n// delete the selected comment\r\nexport function deleteComment(user_id,comment_id){\r\n    return dispatch => {\r\n        axios.delete(`/comments/${user_id}/delete-comment/${comment_id}`)\r\n        .then( (res) => {\r\n            dispatch({type:'DELETEDCOMMENT'});\r\n        })\r\n        .catch(function(error){\r\n            console.log(error);\r\n        });\r\n    };\r\n}","import React, {useEffect,useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nimport {Card} from 'react-bootstrap';\nimport jwt from 'jsonwebtoken';\n// importing comments component\nimport Comments from './comments';\n// functions to dispatch for api calls\nimport {getBlog, DeleteBlog} from '../../redux/actions/blogs';\nimport {GetVotes, addVote,removeVote} from '../../redux/actions/votes';\nimport {getComments} from '../../redux/actions/comments';\n// heart icons\nimport { FaHeart } from \"react-icons/fa\";\nimport { FaRegHeart } from \"react-icons/fa\";\nimport { MdDelete } from \"react-icons/md\";\n\nimport '../../css/home.css';\n\n//Blog Detail component\nconst Detail = (props) => {\n    //data of user\n    const data = jwt.decode(localStorage.jwtToken);\n    //getting blogid from localstorage\n    var blogid = props.location.state.blog_id;\n    // getting the data from backend\n    const blog = useSelector( state => state.blogReducer.blogDetail);\n    // checking if the current user has liked this blog or not\n    var isliked = useSelector( state => state.votesReducer.isliked);\n    // total number of likes the selected blog has got\n    var vote = useSelector( state => state.votesReducer.votes);\n    // for changing state and updating component only\n    const [votes,setVotes] = useState(0);\n    const [profileNav, setProfileNav] = useState(false);\n    // storing blog and author id to pass as props in Redirect component\n    const [author,setAuthor] = useState();\n\n    console.log('Checking vote in blog-detail:- ' + vote);\n    console.log(\"In blog isliked:- \" + isliked);\n    // initializing dispatch function\n    const dispatch = useDispatch();\n    // defining the foll var to pass props to comments component\n    const propsData={\n        blog_id:blogid,\n        user_id:data.id\n    };\n\n    // running functions on loading and updating the component\n    useEffect( () => {\n        dispatch(getBlog(blogid));\n        dispatch(getComments(blogid));\n        dispatch(GetVotes(blogid,data.id));\n        setVotes(vote);\n        // return function cleanup() {\n        //     localStorage.removeItem('blogid');\n        // };\n    }, [votes]);\n\n    const handleDelete = () => {\n        if(window.confirm('Are you sure you want to delete this blog?')){\n            dispatch(DeleteBlog(blogid));\n        }\n    };\n\n    // adding the like to the backend\n    const handleVote = (e) => {\n        isliked = true;\n        setVotes(vote+1);\n        dispatch(addVote(data.id,blogid));\n    };\n\n    // unvoting the blog \n    const handleUnvote = (e) => {\n        isliked = false;\n        setVotes(vote-1);\n        dispatch(removeVote(data.id,blogid));\n    };\n\n    const handleProfileClick = (id,e) => {\n        setAuthor(id)\n        //localStorage.setItem('userid', id);\n        setProfileNav(true);\n    };\n\n    // if user clicked on username then redirecting to user-profile\n    if(profileNav){\n        return < Redirect to ={ {\n            pathname: '/profile',\n            state: { user_id: author }\n          }} \n          />;\n    }\n\n\n    return (\n        <div className='blogs-detail'>\n            <Card className=\"text-center blog-card\" key={blog._id} bg='info'>\n                <Card.Header className='card-title-home' onClick={(e) => handleProfileClick(blog.user_id,e)}>@{blog.author}</Card.Header>\n                <Card.Body>\n                <Card.Title>{blog.title}</Card.Title>\n                <Card.Text className='card-text'>\n                {blog.content}\n                </Card.Text>\n                </Card.Body>\n                <Card.Footer style={{ textAlign: 'left' }}>\n                    { !isliked && <FaRegHeart className='blog-detail-icon'  onClick={handleVote} />}&nbsp;\n                    { isliked && <FaHeart className='blog-detail-icon' onClick={handleUnvote} />}&nbsp;\n                    <span>{vote}</span>\n                    { (data.id === blog.user_id) && <MdDelete className='blog-detail-icon delete' onClick={handleDelete}/>}\n                </Card.Footer>\n            </Card><br/>\n\n            <Comments data={propsData}/>\n        </div>\n    );\n};\n\nexport default Detail;","import React from 'react';\nimport './App.css';\n\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\n\nimport Home from './components/blogs/home';\nimport Register from './components/register/register';\nimport Postregister from './components/register/post_register';\nimport Login from './components/login/login';\nimport Logout from './components/login/logout';\nimport Profile from './components/profile/profile';\nimport Updateprofile from './components/profile/Updateprofile';\nimport Menu from './components/navbar';\nimport Blog from './components/blogs/new_blog';\nimport Detail from './components/blogs/blog_detail';\n\n\nclass App extends React.Component {\n  // const [check, setCheck] = useState(false);\n\n  // useEffect = () => {\n  //   setCheck(this.props.reducer_state.check)\n  // }\n\nrender(){\n  return(\n      <div className=\"App\">\n          <BrowserRouter>\n          <Menu />\n                  <Switch>\n                      <Route exact path='/' component={Register} /> \n                      {/* { check && <Route exact path='/' component={Home} /> } */}\n                      <Route exact path='/home' component={Home} />\n                      \n                      <Route path='/register' component={Register} />\n                      <Route path='/success-register' component={Postregister} />\n\n\n                      <Route path='/login' component={Login} />\n                      <Route path='/logout' component={Logout} />\n                      <Route path='/profile' render={(props) => <Profile {...props}/>} />\n                      <Route path='/update-profile' component={Updateprofile} />\n                      <Route path='/new-blog' component={Blog} />\n                      <Route path='/blog-detail' render={(props) => <Detail {...props}/>} />\n                  \n                  </Switch>\n\n          </BrowserRouter>\n      </div>\n  );\n}\n}\n\n//Accessing the state of the reducer\n\n\nexport default (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const myState = {\r\n    isLoggedIn: false,\r\n    current_user: {}\r\n};\r\n\r\nexport const userReducer =  (state = myState, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'REGISTERED_USER':\r\n            return state;\r\n\r\n        case 'USER_LOGIN':\r\n            return Object.assign(myState,{isLoggedIn: true, current_user: action.payload.user_data});    \r\n\r\n        case 'LOGGEDIN':\r\n            return Object.assign(myState,{isLoggedIn: true});    \r\n\r\n        default:\r\n            return state;\r\n    }   \r\n}","const myState = {\n    blogs: [],\n    blogDetail: {},\n    blogid: null\n};\n\nexport const blogReducer =  (state = myState, action) => {\n    switch (action.type) {\n        case 'BLOGS':\n            console.log(\"Loading Blogs ....... \");\n            return Object.assign(myState,{blogs: action.payload}); \n        \n        case 'NEW_BLOG':\n            return state;\n\n        case 'GOTBLOGS':\n            return state;\n\n        case 'BLOGDETAIL':\n            return Object.assign(myState,{blogDetail: action.payload.data});\n\n        case 'SETBLOGID':\n            return Object.assign(myState,{blogid: action.payload});\n\n        case 'BLOGDELETED':\n            // console.log('Blog deleted successfully:- ' + action.payload);\n            window.location.href = '/home';\n            return state;\n\n        default:\n            //returning previous state\n            return state;\n    }   \n};","var myState = {\n    curr_user_data: {},\n    user_blogs: {}\n};\n\nexport const UserProfile = (state = myState, action) => {\n    switch(action.type){\n        case 'FETCHING_USER':\n            console.log(\"Fetching Data\");\n        break;\n\n        case 'GOT_USER':\n            return Object.assign({}, state, {curr_user_data: action.payload.data});\n\n        case 'UPDATING':\n            console.log('Updating Profile');\n            return state;\n\n        case 'Updated':\n            console.log('Updated Profile');\n            return Object.assign({}, state, {curr_user_data: action.payload.data});\n\n        default:\n            return state;\n\n    }\n};","var myState = {\n    votes: 0,\n    isliked: false,\n    allvotes: []\n};\n\nexport const votesReducer = (state=myState, action) => {\n    switch(action.type){\n        case 'GETTINGVOTES':\n            console.log('Getting Votes');\n            return state;\n\n        case 'GOTALLVOTES': \n            return Object.assign({}, state, {allvotes: action.payload.data});\n\n        case 'GOTVOTES':\n            return Object.assign({}, state, {votes: action.payload.data.votes, isliked: action.payload.data.user_vote});\n        case 'VOTEADDED':\n            return state;\n\n        case 'USERVOTE':\n            return Object.assign(state, {isliked: action.payload.data});\n        \n        default:\n            return myState;\n    }\n};\n\n","const commentState = {\r\n    comments: []\r\n};\r\n\r\nexport const commentReducer = (state = commentState, action) => {\r\n    switch(action.type){\r\n        case 'NEWCOMMENT':\r\n            alert('Comment posted successfully');\r\n            return state;\r\n\r\n        case 'GOTCOMMENTS':\r\n            console.log(\"Loading Comments ....... \");\r\n            return Object.assign(commentState,{comments: action.payload.comment}); \r\n\r\n        case 'DELETEDCOMMENT':\r\n            alert('Comment Deleted successfully. Please refresh the page');\r\n            return state;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers} from 'redux';\r\nimport { userReducer } from './userReducer';\r\nimport {blogReducer} from './blogsReducer';\r\nimport {UserProfile} from './UserProfile';\r\nimport {votesReducer} from './votesReducer';\r\nimport {commentReducer} from './commentReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    userReducer,\r\n    blogReducer,\r\n    UserProfile,\r\n    votesReducer,\r\n    commentReducer\r\n});\r\n\r\nexport default rootReducer;","import rootReducer from '../reducers/index';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// function to provide the store to the app. \nimport { Provider } from 'react-redux';\n// importing redux store\nimport store from './redux/store/index';\nimport {setCurrentUser} from './redux/actions/login';\nimport setAuthorization from './shared/authorization-token';\nimport jwt from 'jsonwebtoken';\nconst secret = '53ddf1277aa9cce7f64fd176d566553322a86c139047a1d9c7a8e09c2500029ba167c9efba48fe49e9c81308f4d3c03c64016ad05478b3785432aea52ab5043a';\nvar token = localStorage.jwtToken;\n\nif(token) {\n    jwt.verify(token, secret, (err, authData) => {\n        if(err) {\n            window.location.href = '/login';\n            localStorage.clear('jwtToken');\n        } else {\n            setAuthorization(token);\n            store.dispatch(setCurrentUser(authData));\n        }\n  });\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from 'axios';\n\nexport default function setAuthorization(token) {\n  if(token) {\n    axios.defaults.headers.common['authorization'] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common['authorization'];\n  }\n}\n"],"sourceRoot":""}